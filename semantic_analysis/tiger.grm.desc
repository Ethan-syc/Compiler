2 shift/reduce conflicts

error:  state 31: shift/reduce conflict (shift FUNCTION, reduce by rule 25)
error:  state 33: shift/reduce conflict (shift TYPE, reduce by rule 14)

state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 2
	program	goto 139
	lvalue	goto 1

	.	error


state 1:

	exp : lvalue .  (reduce by rule 32)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 16
	DOT	shift 15
	ASSIGN	shift 14


	.	reduce by rule 32


state 2:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 0


state 3:

	exp : NIL .  (reduce by rule 33)



	.	reduce by rule 33


state 4:

	exp : BREAK .  (reduce by rule 60)



	.	reduce by rule 60


state 5:

	exp : LET . decs IN exp END 

	FUNCTION	shift 38
	VAR	shift 37
	TYPE	shift 36

	decs	goto 35
	dec	goto 34
	tydec	goto 33
	vardec	goto 32
	fundec	goto 31
	fundecs	goto 30
	tydecs	goto 29

	.	error


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 39


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 40
	lvalue	goto 1

	.	error


state 8:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 41
	lvalue	goto 1

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	lvalue	goto 1

	.	error


state 10:

	exp : LPAREN . expseq RPAREN 
	exp : LPAREN . RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	RPAREN	shift 45
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 44
	lvalue	goto 1
	expseq	goto 43

	.	error


state 11:

	exp : STRING .  (reduce by rule 37)



	.	reduce by rule 37


state 12:

	exp : INT .  (reduce by rule 36)



	.	reduce by rule 36


state 13:

	exp : ID . LPAREN RPAREN 
	exp : ID . LPAREN arglist RPAREN 
	exp : ID . LBRACE reclist RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	lvalue : ID .  (reduce by rule 28)
	lvalue : ID . LBRACK exp RBRACK 

	LPAREN	shift 48
	LBRACK	shift 47
	LBRACE	shift 46


	.	reduce by rule 28


state 14:

	exp : lvalue ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 49
	lvalue	goto 1

	.	error


state 15:

	lvalue : lvalue DOT . ID 

	ID	shift 50


	.	error


state 16:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 51
	lvalue	goto 1

	.	error


state 17:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 52
	lvalue	goto 1

	.	error


state 18:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 53
	lvalue	goto 1

	.	error


state 19:

	exp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 54
	lvalue	goto 1

	.	error


state 20:

	exp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 55
	lvalue	goto 1

	.	error


state 21:

	exp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 56
	lvalue	goto 1

	.	error


state 22:

	exp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 57
	lvalue	goto 1

	.	error


state 23:

	exp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 58
	lvalue	goto 1

	.	error


state 24:

	exp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 59
	lvalue	goto 1

	.	error


state 25:

	exp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 60
	lvalue	goto 1

	.	error


state 26:

	exp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 61
	lvalue	goto 1

	.	error


state 27:

	exp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 62
	lvalue	goto 1

	.	error


state 28:

	exp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 63
	lvalue	goto 1

	.	error


state 29:

	dec : tydecs .  (reduce by rule 8)



	.	reduce by rule 8


state 30:

	dec : fundecs .  (reduce by rule 10)



	.	reduce by rule 10

error:  state 31: shift/reduce conflict (shift FUNCTION, reduce by rule 25)

state 31:

	fundecs : fundec . fundecs 
	fundecs : fundec .  (reduce by rule 25)

	FUNCTION	shift 38

	fundec	goto 31
	fundecs	goto 64

	.	reduce by rule 25


state 32:

	dec : vardec .  (reduce by rule 9)



	.	reduce by rule 9

error:  state 33: shift/reduce conflict (shift TYPE, reduce by rule 14)

state 33:

	tydecs : tydec . tydecs 
	tydecs : tydec .  (reduce by rule 14)

	TYPE	shift 36

	tydec	goto 33
	tydecs	goto 65

	.	reduce by rule 14


state 34:

	decs : dec . decs 
	decs : dec .  (reduce by rule 12)

	FUNCTION	shift 38
	VAR	shift 37
	TYPE	shift 36

	decs	goto 66
	dec	goto 34
	tydec	goto 33
	vardec	goto 32
	fundec	goto 31
	fundecs	goto 30
	tydecs	goto 29

	.	reduce by rule 12


state 35:

	exp : LET decs . IN exp END 

	IN	shift 67


	.	error


state 36:

	tydec : TYPE . ID EQ ty 

	ID	shift 68


	.	error


state 37:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 69


	.	error


state 38:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 70


	.	error


state 39:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 71


	.	error


state 40:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 72


	.	error


state 41:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	THEN	shift 73


	.	error


state 42:

	exp : MINUS exp .  (reduce by rule 38)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 



	.	reduce by rule 38


state 43:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 74


	.	error


state 44:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	expseq : exp . SEMICOLON expseq 
	expseq : exp .  (reduce by rule 7)

	SEMICOLON	shift 75
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 7


state 45:

	exp : LPAREN RPAREN .  (reduce by rule 35)



	.	reduce by rule 35


state 46:

	exp : ID LBRACE . reclist RBRACE 

	ID	shift 77

	reclist	goto 76

	.	reduce by rule 5


state 47:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue : ID LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 78
	lvalue	goto 1

	.	error


state 48:

	exp : ID LPAREN . RPAREN 
	exp : ID LPAREN . arglist RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	RPAREN	shift 81
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 80
	lvalue	goto 1
	arglist	goto 79

	.	error


state 49:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 55)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 55


state 50:

	lvalue : lvalue DOT ID .  (reduce by rule 29)



	.	reduce by rule 29


state 51:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 82
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 52:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 42)
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18


	.	reduce by rule 42


state 53:

	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 41)
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 41


state 54:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 43)
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 43
	COMMA	reduce by rule 43
	SEMICOLON	reduce by rule 43
	RPAREN	reduce by rule 43
	RBRACK	reduce by rule 43
	RBRACE	reduce by rule 43
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 43
	OR	reduce by rule 43
	THEN	reduce by rule 43
	ELSE	reduce by rule 43
	TO	reduce by rule 43
	DO	reduce by rule 43
	IN	reduce by rule 43
	END	reduce by rule 43
	FUNCTION	reduce by rule 43
	VAR	reduce by rule 43
	TYPE	reduce by rule 43


	.	error


state 55:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 44)
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 44
	COMMA	reduce by rule 44
	SEMICOLON	reduce by rule 44
	RPAREN	reduce by rule 44
	RBRACK	reduce by rule 44
	RBRACE	reduce by rule 44
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 44
	OR	reduce by rule 44
	THEN	reduce by rule 44
	ELSE	reduce by rule 44
	TO	reduce by rule 44
	DO	reduce by rule 44
	IN	reduce by rule 44
	END	reduce by rule 44
	FUNCTION	reduce by rule 44
	VAR	reduce by rule 44
	TYPE	reduce by rule 44


	.	error


state 56:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 45)
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 45
	COMMA	reduce by rule 45
	SEMICOLON	reduce by rule 45
	RPAREN	reduce by rule 45
	RBRACK	reduce by rule 45
	RBRACE	reduce by rule 45
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 45
	OR	reduce by rule 45
	THEN	reduce by rule 45
	ELSE	reduce by rule 45
	TO	reduce by rule 45
	DO	reduce by rule 45
	IN	reduce by rule 45
	END	reduce by rule 45
	FUNCTION	reduce by rule 45
	VAR	reduce by rule 45
	TYPE	reduce by rule 45


	.	error


state 57:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 46)
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 46
	COMMA	reduce by rule 46
	SEMICOLON	reduce by rule 46
	RPAREN	reduce by rule 46
	RBRACK	reduce by rule 46
	RBRACE	reduce by rule 46
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 46
	OR	reduce by rule 46
	THEN	reduce by rule 46
	ELSE	reduce by rule 46
	TO	reduce by rule 46
	DO	reduce by rule 46
	IN	reduce by rule 46
	END	reduce by rule 46
	FUNCTION	reduce by rule 46
	VAR	reduce by rule 46
	TYPE	reduce by rule 46


	.	error


state 58:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 47)
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 47
	COMMA	reduce by rule 47
	SEMICOLON	reduce by rule 47
	RPAREN	reduce by rule 47
	RBRACK	reduce by rule 47
	RBRACE	reduce by rule 47
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 47
	OR	reduce by rule 47
	THEN	reduce by rule 47
	ELSE	reduce by rule 47
	TO	reduce by rule 47
	DO	reduce by rule 47
	IN	reduce by rule 47
	END	reduce by rule 47
	FUNCTION	reduce by rule 47
	VAR	reduce by rule 47
	TYPE	reduce by rule 47


	.	error


state 59:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 48)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 48
	COMMA	reduce by rule 48
	SEMICOLON	reduce by rule 48
	RPAREN	reduce by rule 48
	RBRACK	reduce by rule 48
	RBRACE	reduce by rule 48
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 48
	OR	reduce by rule 48
	THEN	reduce by rule 48
	ELSE	reduce by rule 48
	TO	reduce by rule 48
	DO	reduce by rule 48
	IN	reduce by rule 48
	END	reduce by rule 48
	FUNCTION	reduce by rule 48
	VAR	reduce by rule 48
	TYPE	reduce by rule 48


	.	error


state 60:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 49)
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 



	.	reduce by rule 49


state 61:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 50)
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 



	.	reduce by rule 50


state 62:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 51)
	exp : exp . PLUS exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 51


state 63:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 52)

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 52


state 64:

	fundecs : fundec fundecs .  (reduce by rule 24)



	.	reduce by rule 24


state 65:

	tydecs : tydec tydecs .  (reduce by rule 13)



	.	reduce by rule 13


state 66:

	decs : dec decs .  (reduce by rule 11)



	.	reduce by rule 11


state 67:

	exp : LET decs IN . exp END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 83
	lvalue	goto 1

	.	error


state 68:

	tydec : TYPE ID . EQ ty 

	EQ	shift 84


	.	error


state 69:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 86
	ASSIGN	shift 85


	.	error


state 70:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 87


	.	error


state 71:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 88
	lvalue	goto 1

	.	error


state 72:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 89
	lvalue	goto 1

	.	error


state 73:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 90
	lvalue	goto 1

	.	error


state 74:

	exp : LPAREN expseq RPAREN .  (reduce by rule 34)



	.	reduce by rule 34


state 75:

	expseq : exp SEMICOLON . expseq 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 44
	lvalue	goto 1
	expseq	goto 91

	.	error


state 76:

	exp : ID LBRACE reclist . RBRACE 
	reclist : reclist . COMMA ID EQ exp 

	COMMA	shift 93
	RBRACE	shift 92


	.	error


state 77:

	reclist : ID . EQ exp 

	EQ	shift 94


	.	error


state 78:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : ID LBRACK exp . RBRACK OF exp 
	lvalue : ID LBRACK exp . RBRACK 

	RBRACK	shift 95
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 79:

	exp : ID LPAREN arglist . RPAREN 
	arglist : arglist . COMMA exp 

	COMMA	shift 97
	RPAREN	shift 96


	.	error


state 80:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	arglist : exp .  (reduce by rule 1)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 1


state 81:

	exp : ID LPAREN RPAREN .  (reduce by rule 39)



	.	reduce by rule 39


state 82:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 30)



	.	reduce by rule 30


state 83:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : LET decs IN exp . END 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	END	shift 98


	.	error


state 84:

	tydec : TYPE ID EQ . ty 

	ID	shift 102
	LBRACE	shift 101
	ARRAY	shift 100

	ty	goto 99

	.	error


state 85:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 103
	lvalue	goto 1

	.	error


state 86:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 104


	.	error


state 87:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 106

	tyfields	goto 105

	.	reduce by rule 21


state 88:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	TO	shift 107


	.	error


state 89:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : WHILE exp DO exp .  (reduce by rule 58)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 58


state 90:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 57)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	ELSE	shift 108


	.	reduce by rule 57


state 91:

	expseq : exp SEMICOLON expseq .  (reduce by rule 6)



	.	reduce by rule 6


state 92:

	exp : ID LBRACE reclist RBRACE .  (reduce by rule 53)



	.	reduce by rule 53


state 93:

	reclist : reclist COMMA . ID EQ exp 

	ID	shift 109


	.	error


state 94:

	reclist : ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 110
	lvalue	goto 1

	.	error


state 95:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 31)

	OF	shift 111


	.	reduce by rule 31


state 96:

	exp : ID LPAREN arglist RPAREN .  (reduce by rule 40)



	.	reduce by rule 40


state 97:

	arglist : arglist COMMA . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 112
	lvalue	goto 1

	.	error


state 98:

	exp : LET decs IN exp END .  (reduce by rule 61)



	.	reduce by rule 61


state 99:

	tydec : TYPE ID EQ ty .  (reduce by rule 15)



	.	reduce by rule 15


state 100:

	ty : ARRAY . OF ID 

	OF	shift 113


	.	error


state 101:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 106

	tyfields	goto 114

	.	reduce by rule 21


state 102:

	ty : ID .  (reduce by rule 16)



	.	reduce by rule 16


state 103:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 22)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 22


state 104:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 115


	.	error


state 105:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 
	tyfields : tyfields . COMMA ID COLON ID 

	COMMA	shift 117
	RPAREN	shift 116


	.	error


state 106:

	tyfields : ID . COLON ID 

	COLON	shift 118


	.	error


state 107:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 119
	lvalue	goto 1

	.	error


state 108:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 120
	lvalue	goto 1

	.	error


state 109:

	reclist : reclist COMMA ID . EQ exp 

	EQ	shift 121


	.	error


state 110:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	reclist : ID EQ exp .  (reduce by rule 3)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 3


state 111:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 122
	lvalue	goto 1

	.	error


state 112:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	arglist : arglist COMMA exp .  (reduce by rule 2)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 2


state 113:

	ty : ARRAY OF . ID 

	ID	shift 123


	.	error


state 114:

	ty : LBRACE tyfields . RBRACE 
	tyfields : tyfields . COMMA ID COLON ID 

	COMMA	shift 117
	RBRACE	shift 124


	.	error


state 115:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 125
	lvalue	goto 1

	.	error


state 116:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 127
	EQ	shift 126


	.	error


state 117:

	tyfields : tyfields COMMA . ID COLON ID 

	ID	shift 128


	.	error


state 118:

	tyfields : ID COLON . ID 

	ID	shift 129


	.	error


state 119:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 130


	.	error


state 120:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 56)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 56


state 121:

	reclist : reclist COMMA ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 131
	lvalue	goto 1

	.	error


state 122:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 54)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 54


state 123:

	ty : ARRAY OF ID .  (reduce by rule 18)



	.	reduce by rule 18


state 124:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 17)



	.	reduce by rule 17


state 125:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 23)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 23


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 132
	lvalue	goto 1

	.	error


state 127:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 133


	.	error


state 128:

	tyfields : tyfields COMMA ID . COLON ID 

	COLON	shift 134


	.	error


state 129:

	tyfields : ID COLON ID .  (reduce by rule 20)



	.	reduce by rule 20


state 130:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 135
	lvalue	goto 1

	.	error


state 131:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	reclist : reclist COMMA ID EQ exp .  (reduce by rule 4)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 4


state 132:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 26)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 26


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 136


	.	error


state 134:

	tyfields : tyfields COMMA ID COLON . ID 

	ID	shift 137


	.	error


state 135:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 59)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 59


state 136:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 138
	lvalue	goto 1

	.	error


state 137:

	tyfields : tyfields COMMA ID COLON ID .  (reduce by rule 19)



	.	reduce by rule 19


state 138:

	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . NEQ exp 
	exp : exp . EQ exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . PLUS exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 27)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 27


state 139:


	EOF	accept


	.	error

528 of 1043 action table entries left after compaction
100 goto table entries
