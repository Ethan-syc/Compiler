/*
Quick sort tiger example
*/

let
 type arrtype = array of int
 var arr := arrtype [15] of 0

 function quick_sort(arr: arrtype, lo: int, hi: int) =
  let
   var pi := 0
  in
   if
    lo < hi
   then
    (
     pi := partition(arr, lo, hi);
     quick_sort(arr, lo, pi - 1);
     quick_sort(arr, pi + 1, hi)
    )
  end

 function partition(arr: arrtype, lo: int, hi: int):int =
  let
   var pivot := arr[hi]
         var i := lo - 1
         var temp1 := 0
         var temp2 := 0
  in
         for j := lo to hi - 1
          do (
           if
            arr[j] <= pivot
              then
                  (
                   i := i + 1;
                   temp1 := arr[i];
                   arr[i] := arr[j];
                   arr[j] := temp1
                  )
          );
         temp2 := arr[i+1];
         arr[i+1] := arr[hi];
         arr[hi] := temp2;
         i + 1
     end


in
 arr[0] := 12;
 arr[1] := 0;
 arr[2] := -102;
 arr[3] := 12;
 arr[4] := 5003;
 arr[5] := 17;
 arr[6] := -56;
 arr[7] := 20;
 arr[8] := 37;
 arr[9] := -10;
 arr[10] := 1000;
 arr[11] := 27;
 arr[12] := 42;
 arr[13] := 55;
 arr[14] := -1;


 quick_sort(arr, 0, 14);
 print("Sorted results:\n");
 for i := 0 to 14
  do
  (printInt(arr[i]); print("\n"))

end
